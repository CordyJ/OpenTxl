% Project REX - Complete Syntax of the ISL
% J.R. Cordy, GMD Karlsruhe, 24.10.90

comments
        '%
end comments

compounds
        ++  ==
end compounds

keys
        component  'end  use  port  entry  exit  types  result  invert  linked
end keys

define program
        [FileSpec]
end define

define FileSpec
        [repeat UnitSpec]
end define

define UnitSpec
        [ComponentSpec]
    |   [TypeUnitSpec]
end define

define ComponentSpec
                                                                [NL]
        component [Ident] [opt FormalParams] [opt Interface] ;  [NL][IN]
            [opt ComponentBody]                                 [EX]
        'end [opt Ident] .                                      [NL]
end define

define Ident
        [id]
end define

define FormalParams
        ( [FormalParamList] )
end define

define FormalParamList
        [repeat FormalParam+]
end define

define FormalParam
        [IdentList] : [Type] [opt DefaultPart] ;        [NL]
end define

define DefaultPart
        = [Constant]
end define

define Interface
        = [PortDecList]
end define

define PortDecList
        [PortDecl] [repeat pp_PortDecl]
end define

define pp_PortDecl
        ++ [PortDecl]
end define

define PortDecl
        [Direction] [Ident]
end define

define Expr
        [number] 
    |   [Ident]
    |   ( [Expr] )
    |   [Expr] + [Expr]
    |   [Expr] - [Expr]
    |   [Expr] * [Expr]
    |   [Expr] / [Expr]
    |   [Expr] % [Expr]
    |   - [Expr]
end define

define ComponentBody
        [SentenceList]
end define

define SentenceList
        [repeat Sentence]
end define

define Sentence
        ;               [NL]
    |   [UseClause] ;   [NL]
    |   [PortClause] ;  [NL]
end define

define UseClause
        use [Ident] [opt SelectionPart]
end define

define SelectionPart
        : [IdentRenameList]
end define

define IdentRenameList
        [list IdentRename+]
end define

define IdentRename
        [Ident] [opt RenamePart]
end define

define IdentList
        [list Ident+]
end define

define ExprList
        [list Expr+]
end define

define RenamePart
        / [Ident]
end define

define PortClause
        port [opt Direction] [IdentList] [opt TypeInfo]
end define

define Direction
        entry | exit
end define

define TypeInfo
        : [Type]
end define

define TypeUnitSpec
                                [NL]
        types [Ident] ;         [NL][IN]
            [opt TypeUnitBody]  [EX]
        'end [opt Ident] .      [NL]
end define

define TypeUnitBody
        [StatementList]
end define

define StatementList
        [repeat Statement+]
end define

define Statement
        ;               [NL]
    |   [ConstDef] ;    [NL]
    |   [UseClause] ;   [NL]
    |   [PortClause] ;  [NL]
    |   [TypeClause] ;  [NL]
end define

define ConstDef
        [Ident] == [Constant]
end define

define Constant
        [Expr] | [stringlit]
end define

define TypeClause
        [Ident] [opt GenericPart] [opt FormalParamPart] = [Type]
end define

define GenericPart
        '[ [IdentDefaultTypeList] ']
end define

define FormalParamPart
        ( [IdentDefaultExprList] )
end define

define IdentDefaultTypeList
        [list IdentDefaultType+]
end define

define IdentDefaultType
        [Ident] [opt DefaultType]
end define

define DefaultType
        = [Ident]
end define

define IdentDefaultExprList
        [list IdentDefaultExpr+]
end define

define IdentDefaultExpr
        [Ident] [opt DefaultExpr]
end define

define DefaultExpr
        = [Constant]
end define

define Type
        [TypeExtension]
    |   [DynamicType]
    |   [Type1]
end define

define Type1
        [StructuredType]
    |   [PortType]
    |   [SimpleType]
    |   [FlattenType]
    |   ( [Type] }
end define

define SimpleType
        [Ident] [opt GenericParam] [opt ValueParam]
end define

define GenericParam
        '[ [SimpleTypeList] ']
end define

define ValueParam
        ( [ExprList] )
end define

define PortType
        port [SimpleTypeList] [opt ReturnPart]
end define

define SimpleTypeList
        [list SimpleType+]
end define

define ReturnPart
        result [SimpleTypeList]
end define

define StructuredType
        [ArrayType]
    |   [RecordType]
    |   [VariantType]
    |   [PortSetType]
end define

define ArrayType
        '[ [DimensionList] '] [SimpleType]
end define

define DimensionList
        [list Expr+]
end define

define RecordType
        ( [FieldList] )
end define

define FieldList
        [repeat Field+]
end define

define Field
        [IdentList] : [Type] ;
end define

define VariantType
        < [VariantList] >
end define

define VariantList
        [list VariantDef+]
end define

define VariantDef
        [Ident] : [Type]
end define

define PortSetType
        { [opt PortListOptInvertPart] }
end define

define PortListOptInvertPart
        [PortList] [opt InvertPart]
end define

define PortList
        [repeat PortDef+]
end define

define PortDef
        [IdentList] : [Type] ;  [NL]
end define

define InvertPart
        invert [PortList]
end define

define DynamicType
        ^ [Type1]
end define

define TypeExtension
        [Type1] [repeat pp_Type1] 
end define

define pp_Type1
        ++ [Type1]
end define

define FlattenType
        linked [Type1]
end define
